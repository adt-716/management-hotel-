<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnLuu.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DAAACwwBP0AiyAAABM9JREFUeF7tnT+IFVcchXcLt5FEbAJpJCkWCwsLU6RJkaBFIEUaSS2Cja3ComU6
        SZEqkNrSlIFgIUmRpEqlK9gIgtiKKCrK+uecNQvLcnZmdt57976553zwgb59c+d3Zz7esrK+twJW4QZ8
        BN/FYm7Bv+GXsCq8+WrAWMbn8BtYjYdQDRbLWTWCt1ANFctaLQI1TKzjC3gaFkUNEutZ/JVADUGvwwuF
        /QWqWegNyJmmIGdVe6Dc4797Httr0QjUAJQ3pDTfQzUL/QROBc6q9kC5x8Pwr12PKYt9O1AnpwlgPH0B
        kKWJQJ2YJoDxDAmALEUE6qQ0AXyA/1J6DK5t/20YQwMg1SNQJ6QJYGXlW/gA8vzP4BXIIPo4SACkagTq
        ZNQ9gHX4Eu6d4xzs46ABkGoRqBNR9wCuQjXHn7CPMQGQKhGok1D3AH6Gao5N2MfYAEjxCNQJaALQcyw6
        AFI0ArU4TQB6jhIBkGIRqIVpAtBzlAqAFIlALUoTgJ6jZABk4RGoBWkC0HOUDoAsNAK1GE0Aeo4aAZCF
        RaAWoglAz1ErALKQCNQiNAHoOWoGQOYegVqAJgA9R+0AyFwjUAfTBKDnuAP7WHQAZG4RqAOpewCXoJrj
        D9hHiQDIXCJQB1H3AD6Fj+HuGfgr9N/BPkoFQGaOQB1A3QMgJ+EtyBDuwh/gEEoGQGaKQD2ZJoDxlA6A
        jI5APZEmgPHUCICMikA9iSaA8dQKgBw4AvUEmgDGUzMA8hH8B6rz78j/fPIFlF+kyxbAGXhqInJWtQda
        IgAyJAJ+XX6BLlsArVgqANIXwSsov0ATwGIsGQBhBF3/F1E+SBPAYiwdAOG9VLNQ+SCtEcBXUM3Sktxj
        aSYTwCF4H6p5WpB74x5LM5kAyAl4G6qZpiz3xL3VYFIB7PA5VD9iTVHupSaTDCDMjwRgTgIwJwGYkwDM
        SQDmJABzEoA5CcCcBGBOAjAnAZiTAMxJAOYkAHMSgDkJwJwEYE4CMCcBmJMAzEkA5iQAcxKAOQnAnARg
        TgIwJwGYkwDMSQDmJABzEoA51QI4Ds9DrhUPLq8dr+GscC11j6l8kPKgWbgM30C1dhwuryGv5SwUD4Dv
        hZObPz95LWd5f6HiAVyEas04Xl7TsRQPgC9Zas043lm+DSSABkwA5jYRwBMYuuE1UtcuAZiQAMxJAOYk
        AHMSgDkJwJwEYE4CMMc+AH469+/wv8bknoZ88rh1AOcgP6JdHduC3Bv32IV1AA+hOq4luccubANYg+qY
        FuVe98P6FWATquNaknvswjqAryE/2lwd24LcG/fYhXUAZB3+CH9tTO6Je+vDPgB3EoA5CcCcBGBOAjAn
        AZiTAMxJAOYkAHMSgDkJ4H+OwKON+DEcinUAh+A1uN9FmLLcE/fGPXZhHcBPUB3XktxjF7YBrMKnUB3X
        ktwj97oftgHwpXELquNaknvs+jZgGwC5CdVxLck9dmEdwGfwHlTHtiD3xj12YR0A4cvjaXi2Mbmnvp8A
        iH0A7iQAcxKAOQnAnARgTgIwJwGYkwDMWZoArkMeOMbfoFrzNeS6cX95jdS14zVV13qIXFetSeWD0Uf5
        YPSx6bdkid3y3lu8LUvUbr9dzcauB6KXvPfbv57EPzyC6kmxPXmvcc9XVt8DB9rkAOSfHdYAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>